<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type='text/xsl' href='./rfc2629.xslt' ?>
<?rfc toc="yes"?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN"
"http://xml.resource.org/authoring/rfc2629.dtd">
<rfc ipr="full3978"
     docName="opensocial-restful-protocol-specification-v0_9">
 <front>
  <title abbrev="OpenSocial REST">OpenSocial RESTful Protocol Specification
  v0.9</title>
  <author surname="OpenSocial and Gadgets Specification Group"
          fullname='OpenSocial and Gadgets Specification Group &lt;opensocial-and-gadgets-spec@googlegroups.com&gt;'>
   <address>
    <email>opensocial-and-gadgets-spec@googlegroups.com</email>
   </address>
  </author>
  <date month="April"
        year="2009" />
  <area>General</area>
  <keyword>OpenSocial</keyword>
  <keyword>social networking</keyword>
  <keyword>REST</keyword>
  <keyword>XML</keyword>
  <keyword>Extensible Markup Language</keyword>
  <keyword>JSON</keyword>
  <keyword>JavaScript Object Notation</keyword>
  <keyword>Atom</keyword>
 </front>
 <middle>
  <section title="Notation and Conventions">
    <t> [ Moved to Core-API-Server.xml and Social-API-Server.xml] </t>
  </section>
  <section title="Overview">
    <t> [ Moved to Core-API-Server.xml] </t>
  </section>
  <section title="Data Representations"
           anchor="dataRepresentations">
   <t> [Needs to be moved to the Core-Data.xml] </t>
   <t>Each resource has three representations, as JSON, XML, and Atom. All data
   must be representable in each format. The XML and JSON formats have a one to
   one mapping while the Atom format is defined separately for each type of
   object and collection. Throughout this document, examples will only be given
   in JSON and Atom. The XML representation can be mapped directly from the
   JSON and MUST conform to the XSD in 
   <xref target="XML_format_XSD" />.</t>
   <t>Each resource is represented as a hierarchical tree of elements. Ordering
   of elements within a parent element may or may not be significant, depending
   on the context. Mapping consists of converting between the internal
   hierarchy and the JSON/XML or Atom protocol format.</t>
   <t>The general rules for mapping between the Atom and JSON formats are as
   follows. Each data type may add additional aliasing rules. 
   <list style="symbols">
    <t>The default location for all data in the Atom format is in
    atom:entry/atom:content/datatype, where datatype is a root node naming the
    type of data delivered: &lt;person&gt;, &lt;group&gt;, &lt;activity&gt;, or
    &lt;appdata&gt;.</t>
    <t>The field names are specified at the end of this document in
    camelCase.</t>
    <t>Strings are represented as strings in both formats.</t>
    <t>Dates and timestamps are represented as strings using 
    <xref target="RFC3339">RFC3339 Timestamps</xref> format date-time elements.
    These are also known as "XSD Dates". In cases where only a day-of-the-year
    is desired, e.g., a birthday, the year SHOULD be specified as 0000.</t>
    <t>Enums are represented as objects with "displayvalue" (localizable,
    customizable string) and "key" (key) fields.</t>
    <t>Arrays are represented as arrays in the JSON representation and as
    repeated fields in the XML representation.</t>
    <t>Sub-objects are represented as sub-elements in both formats.</t>
    <t>Fields are placed directly in the root object in the JSON format. In the
    Atom format, they are by default placed under atom:content/datatype (e.g.,
    atom:content/person for person data). Some fields are 'hoisted' and aliased
    to standard Atom fields directly underneath atom:entry. There are three
    standard aliases that apply to all data types: 
    <list style="symbols">
     <t>atom:entry/atom:id aliases the "id" field. The JSON format id is the
     OpenSocial globally unique ID, which consists of the container domain
     (e.g., example.org) followed by a colon and the container's id for that
     person. The container specific id can only contain letters (A-Za-z),
     numbers (0-9), dots (.), hyphens (-) and underscores (_). For example,
     example.org:78gh37261ddfdf. In the Atom format, it is translated into the
     required URI data type by prepending "urn:guid:" to the OpenSocial ID
     string. These rules are intended to make mapping IDs between the RESTful
     API and the JS API straightforward while preserving global uniqueness.</t>
     <t>atom:entry/atom:updated aliases the JSON field indicating the most
     recent update time if available (POSTED_TIME for Activity), or the
     generation time if no better information is available.</t>
     <t>atom:entry/atom:published aliases the JSON field indicating creation
     time (POSTED_TIME for Activity).</t>
    </list></t>
   </list></t>
   <section title="Responses">
     <t> [ Moved to Core-Data.xml] </t>
   </section>
   <section title="Person">
     <t> [ Needs to be moved to Social-Data.xml ] </t>
    <t>A Person contains social network data about a single person. The same
    record is used for contacts/friends and for profiles. See 
    <xref target="personFields" /> for a full list of available fields and their
    types. See also the general mapping rules in 
    <xref target="dataRepresentations" />.</t>
    <t>A minimal Person example: 
    <figure>
     <preamble>application/json representation:</preamble>
     <artwork xml:space="preserve">
{
 "id" : "example.org:34KJDCSKJN2HHF0DW20394",
 "displayName" : "Janey",
 "name" : {"formatted" : "Jane Doe"},
 "gender" : "female"
}       
</artwork>
    </figure>
    <figure>
     <preamble>application/xml representation:</preamble>
     <artwork xml:space="preserve">
&lt;person xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
  &lt;id&gt;example.org:34KJDCSKJN2HHF0DW20394&lt;/id&gt;
  &lt;displayName&gt;Janey&lt;/displayName&gt;
  &lt;name&gt;
    &lt;formatted&gt;Jane Doe&lt;/formatted&gt;
  &lt;/name&gt;
  &lt;gender&gt;female&lt;/gender&gt;
&lt;/person&gt;       
</artwork>
    </figure>
    <figure>
     <preamble>application/atom+xml representation:</preamble>
     <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom"&gt;
 &lt;id&gt;example.org:34KJDCSKJN2HHF0DW20394&lt;/id&gt;&lt;!-- person.id --&gt;
 &lt;title&gt;Janey&lt;/title&gt;&lt;!-- person.displayName --&gt;
 &lt;updated&gt;2008-03-15T10:00:00Z&lt;/updated&gt;&lt;!-- last profile edit, or datetime.utcnow() --&gt;
 &lt;author&gt;&lt;name&gt;Janey&lt;/name&gt;&lt;/author&gt;&lt;!-- person.displayName --&gt;
 &lt;content type="application/xml"&gt;
   &lt;person xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
     &lt;id&gt;example.org:34KJDCSKJN2HHF0DW20394&lt;/id&gt;
     &lt;displayName&gt;Janey&lt;/displayName&gt;
     &lt;name&gt;
       &lt;formatted&gt;Jane Doe&lt;/formatted&gt;
     &lt;/name&gt;
     &lt;gender&gt;female&lt;/gender&gt;
   &lt;/person&gt;
 &lt;/content&gt;
&lt;/entry&gt;
</artwork>
    </figure>Note: The atom:summary element is the appropriate place to put a
    text or HTML representation of the structured data present in the content
    element, and the atom:title element is the appropriate place to copy a
    short descriptive name for the entry, such as name.unstructured. Servers
    MAY choose to add these or other fields to make their feeds more useful for
    generic aggregators or tools.</t>
   </section>
   <section title="Group">
     <t> [ Needs to be moved to Social-Data.xml ] </t>
    <t>OpenSocial Groups are owned by people, and are used to tag or categorize
    people and their relationships. The RESTful API supports querying for the
    available groups for a given user. The groups are returned as a collection.
    Each group has a display name, an identifier which is unique within the
    groups owned by that person, and a URI link. A Group example: 
    <figure>
     <preamble>application/json representation:</preamble>
     <artwork xml:space="preserve">
{
 "id" : "example.org:34KJDCSKJN2HHF0DW20394/friends",
 "title" : "Peeps",
}       
</artwork>
    </figure>
    <figure>
     <preamble>application/xml representation:</preamble>
     <artwork xml:space="preserve">
&lt;group xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
  &lt;id&gt;example.org:34KJDCSKJN2HHF0DW20394/friends&lt;/id&gt;
  &lt;title&gt;Peeps&lt;/title&gt;
&lt;/group&gt;       
</artwork>
    </figure>
    <figure>
     <preamble>application/atom+xml representation:</preamble>
     <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom"&gt;
 &lt;id&gt;example.org:34KJDCSKJN2HHF0DW20394/friends&lt;/id&gt;&lt;!-- group.id --&gt;
 &lt;title&gt;Friends of John Smith&lt;/title&gt;&lt;!-- group.title + person.displayName --&gt;
 &lt;updated&gt;2008-03-15T10:00:00Z&lt;/updated&gt;&lt;!-- last significant group change, or datetime.utcnow() --&gt;
 &lt;author&gt;&lt;name&gt;John Smith&lt;/name&gt;&lt;/author&gt;&lt;!-- person.displayName --&gt;
 &lt;link rel="alternate" type="application/json" href="http://example.org/people/example.org:34KJDCSKJN2HHF0DW20394/@friends" /&gt;
 &lt;link rel="alternate" type="application/atom+xml" href="http://example.org/people/example.org:34KJDCSKJN2HHF0DW20394/@friends?format=atom" /&gt;
 &lt;link rel="alternate" type="application/xml" href="http://example.org/people/example.org:34KJDCSKJN2HHF0DW20394/@friends?format=xml" /&gt;
 &lt;content type="application/xml"&gt;
   &lt;group xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
     &lt;id&gt;example.org:34KJDCSKJN2HHF0DW20394/friends&lt;/id&gt;
     &lt;title&gt;Peeps&lt;/title&gt;
   &lt;/group&gt;
&lt;/entry&gt;
</artwork>
    </figure>Groups only appear within Group Collections and are used to
    retrieve a list of available groups for a given person.</t>
   </section>
   <section title="Activity">
     <t> [ Needs to be moved to Social-Data.xml ] </t>
    <t>An OpenSocial Activity represents a short summary or notification of a
    timestamped event, often with pointers for more information. See 
    <xref target="activityFields" /> for a full list of available fields and
    their types. Activities have extensive Atom hoisting rules to ensure
    maximum compatibility with standard feed processing code: 
    <list style="symbols">
     <t>atom:entry/atom:title aliases "title"</t>
     <t>atom:entry/atom:summary aliases "body"</t>
     <t>atom:entry/atom:link@rel="self" aliases "url"</t>
     <t>atom:entry/atom:icon aliases "faviconUrl"</t>
     <t>atom:entry/atom:source/atom:title aliases "streamTitle"</t>
     <t>atom:entry/atom:source/atom:link@rel="self" aliases "streamUrl"</t>
     <t>atom:entry/atom:generator/atom:uri aliases "appId"</t>
     <t>atom:entry/atom:author/atom:uri aliases "userId"</t>
    </list>A minimal Activity example: 
    <figure>
     <preamble>application/json representation:</preamble>
     <artwork xml:space="preserve">
{
 "id" : "http://example.org/activities/example.org:87ead8dead6beef/self/af3778",
 "title" : "&lt;a href=\"foo\"&gt;some activity&lt;/a&gt;",
 "updated" : "2008-02-20T23:35:37.266Z",
 "body" : "Some details for some activity",
 "bodyId" : "383777272",
 "url" : "http://api.example.org/activity/feeds/.../af3778",
 "userId" : "example.org:34KJDCSKJN2HHF0DW20394"
}      
</artwork>
    </figure>
    <figure>
     <preamble>application/xml representation:</preamble>
     <artwork xml:space="preserve">
&lt;activity xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
  &lt;id&gt;http://example.org/activities/example.org:87ead8dead6beef/self/af3778&lt;/id&gt;
  &lt;title&gt;&lt;a href=\"foo\"&gt;some activity&lt;/a&gt;&lt;/title&gt;
  &lt;updated&gt;2008-02-20T23:35:37.266Z&lt;/updated&gt;
  &lt;body&gt;Some details for some activity&lt;/body&gt;
  &lt;bodyId&gt;383777272&lt;/bodyId&gt;
  &lt;url&gt;http://api.example.org/activity/feeds/.../af3778&lt;/url&gt;
  &lt;userId&gt;example.org:34KJDCSKJN2HHF0DW20394&lt;/userId&gt;
&lt;/activity&gt;
</artwork>
    </figure>
    <figure>
     <preamble>application/atom+xml representation:</preamble>
     <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom"&gt;
 &lt;id&gt;http://example.org/activities/example.org:87ead8dead6beef/self/af3778&lt;/id&gt;
 &lt;title&gt;some activity&lt;/title&gt;&lt;!-- activity.title or activity.titleId --&gt;
 &lt;updated&gt;2008-02-20T23:35:37.266Z&lt;/updated&gt;&lt;!-- postedTime, or datetime.utcnow() --&gt;
 &lt;author&gt;
   &lt;uri&gt;urn:guid:example.org:34KJDCSKJN2HHF0DW20394&lt;/uri&gt;
   &lt;name&gt;John Smith&lt;/name&gt; 
 &lt;/author&gt;
 &lt;link rel="self" type="application/atom+xml" href="http://api.example.org/activity/feeds/.../af3778" /&gt;
 &lt;link rel="alternate" type="application/json" href="http://example.org/activities/example.org:87ead8dead6beef/self/af3778" /&gt;&lt;!-- alternate JSON response --&gt;
 &lt;content type="application/xml"&gt;
    &lt;activity xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
      &lt;id&gt;http://example.org/activities/example.org:87ead8dead6beef/self/af3778&lt;/id&gt;
      &lt;title type="html"&gt;&lt;a href=\"foo\"&gt;some activity&lt;/a&gt;&lt;/title&gt;
      &lt;updated&gt;2008-02-20T23:35:37.266Z&lt;/updated&gt;
      &lt;body&gt;Some details for some activity&lt;/body&gt;
      &lt;bodyId&gt;383777272&lt;/bodyId&gt;
      &lt;url&gt;http://api.example.org/activity/feeds/.../af3778&lt;/url&gt;
      &lt;userId&gt;example.org:34KJDCSKJN2HHF0DW20394&lt;/userId&gt;
    &lt;/activity&gt;
 &lt;/content&gt;
&lt;/entry&gt;       
</artwork>
    </figure>Note: The title field is a string that may only have the following
    html tags: &lt;b&gt;, &lt;i&gt;, &lt;a&gt;, &lt;span&gt;. The container may
    ignore this formatting when rendering the activity.</t>
   </section>
   <section title="AppData">
     <t> [ Needs to be moved to Social-Data.xml ] </t>
    <t>AppData stores uninterpreted key/value pairs on behalf of an
    application. The standard unit of AppData is all of the key/value pairs
    stored for a given app on behalf of a given user; however, the API supports
    other types of queries (detailed below). To retrieve a subset of fields,
    use the fields= selector syntax (detailed below).</t>
    <t>The data within each field is assumed to be in JSON format and is
    otherwise uninterpreted.</t>
    <section title="An isolated AppData example."
             anchor="appdataIsolatedExample">
     <t>The first example is of a collection of key/value pairs for a
     particular application/user pair: 
     <figure>
      <preamble>application/json representation:</preamble>
      <artwork xml:space="preserve">
{
 "pokes" : 3,
 "last_poke" : "2008-02-13T18:30:02Z"
}        
</artwork>
     </figure>
     <figure>
      <preamble>application/xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;appData xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
  &lt;entry&gt;
    &lt;key&gt;pokes&lt;/key&gt;
    &lt;value&gt;3&lt;/value&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;key&gt;last_poke&lt;/key&gt;
    &lt;value&gt;2008-02-13T18:30:02Z&lt;/value&gt;
  &lt;/entry&gt;
&lt;/appData&gt;        
</artwork>
     </figure>
     <figure>
      <preamble>application/atom+xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom"&gt;
 &lt;content type="application/xml"&gt;
   &lt;appData xmlns="http://ns.opensocial.org/2008/opensocial"&gt;  
       &lt;pokes&gt;3&lt;/pokes&gt;
       &lt;last_poke&gt;2008-02-13T18:30:02Z&lt;/last_poke&gt;
   &lt;/appData&gt;
 &lt;/content&gt;
 &lt;title/&gt;
 &lt;updated&gt;2003-12-13T18:30:02Z&lt;/updated&gt;
 &lt;author&gt;
   &lt;url&gt;urn:guid:example.org:34KJDCSKJN2HHF0DW20394&lt;/url&gt;
   &lt;name&gt;John Smith&lt;/name&gt;  
 &lt;/author&gt;
 &lt;id&gt;urn:guid:example.org:34KJDCSKJN2HHF0DW20394&lt;/id&gt;
&lt;/entry&gt;        
</artwork>
     </figure></t>
    </section>
    <section title="An AppData Collection Example">
     <t>In this example, a client has requested a collection of data that spans
     multiple users. The result is a collection which, by default, is given a
     special default JSON representation as a mapping from users to their data.
     
     <figure>
      <preamble>application/json representation:</preamble>
      <artwork xml:space="preserve">
{
 "entry" : {
   "example.org:34KJDCSKJN2HHF0DW20394" : {"pokes" : 3, "last_poke" : "2008-02-13T18:30:02Z" },
   "example.org:58UIDCSIOP233FDKK3HD44" : {"pokes" : 2, "last_poke" : "2007-12-16T18:30:02Z" }
 }
}        
</artwork>
     </figure>
     <figure>
      <preamble>application/xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;entry&gt;
 &lt;appData xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
   &lt;personId&gt;example.org:34KJDCSKJN2HHF0DW20394&lt;/personId&gt;
   &lt;entry&gt;
     &lt;key&gt;pokes&lt;/key&gt;
     &lt;value&gt;3&lt;/value&gt;
   &lt;/entry&gt;
   &lt;entry&gt;
     &lt;key&gt;last_poke&lt;/key&gt;
     &lt;value&gt;2008-02-13T18:30:02Z&lt;/value&gt;
   &lt;/entry&gt;
 &lt;/appData&gt;        
 &lt;appData xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
   &lt;personId&gt;example.org:58UIDCSIOP233FDKK3HD44&lt;/personId&gt;
   &lt;entry&gt;
     &lt;key&gt;pokes&lt;/key&gt;
     &lt;value&gt;2&lt;/value&gt;
   &lt;/entry&gt;
   &lt;entry&gt;
     &lt;key&gt;last_poke&lt;/key&gt;
     &lt;value&gt;2007-12-16T18:30:02Z&lt;/value&gt;
   &lt;/entry&gt;
 &lt;/appData&gt;
&lt;/entry&gt;
</artwork>
     </figure>
     <figure>
      <preamble>application/atom+xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;feed xmlns="http://www.w3.org/2005/Atom&gt;
 &lt;id&gt;...&lt;/id&gt;
 &lt;title&gt;...&lt;/title&gt;
 &lt;entry&gt;
   &lt;content type="text/xml"&gt;
     &lt;appData&gt;
       &lt;pokes&gt;3&lt;/pokes&gt;
       &lt;last_poke&gt;"2008-02-13T18:30:02Z"&lt;/last_poke&gt;
     &lt;/appData&gt;
   &lt;/content&gt;
   &lt;title/&gt;
   &lt;updated&gt;2008-02-13T18:30:02Z&lt;/updated&gt;
   &lt;author&gt;&lt;url&gt;urn:guid:example.org:34KJDCSKJN2HHF0DW20394&lt;/url&gt;&lt;/author&gt;
   &lt;id&gt;urn:guid:example.org:34KJDCSKJN2HHF0DW20394&lt;/id&gt;
 &lt;/entry&gt;
 &lt;entry&gt;
   &lt;content type="text/xml"&gt;
     &lt;appData&gt;
       &lt;pokes&gt;2&lt;/pokes&gt;
       &lt;last_poke&gt;"2007-12-16T18:30:02Z"&lt;/last_poke&gt;
     &lt;/appData&gt;
   &lt;/content&gt;
   &lt;title/&gt;
   &lt;updated&gt;2007-12-16T18:30:02Z&lt;/updated&gt;
   &lt;author&gt;&lt;url&gt;uurn:guid:example.org:58UIDCSIOP233FDKK3HD44&lt;/url&gt;&lt;/author&gt;
   &lt;id&gt;urn:guid:example.org:58UIDCSIOP233FDKK3HD44&lt;/id&gt;  
 &lt;/entry&gt;
&lt;/feed&gt;        
</artwork>
     </figure></t>
    </section>
   </section>
   <section title="Albums/MediaItem">
     <t> [ Needs to be moved to Social-Data.xml ] </t>
    <section title="Albums">
     <t>Albums support collections of media items (video, image, sound). 
     <figure>
      <preamble>application/json representation:</preamble>
      <artwork xml:space="preserve">
{
  "id" : "44332211",
  "thumbnailUrl" : "http://pages.example.org/albums/4433221-tn.png",
  "title" : "Example Album",
  "description" : "This is an example album, and this text is an example description",
  "location" : { "latitude": 0, "longitude": 0 },
  "ownerId" : "example.org:55443322"
}       
</artwork>
     </figure>
     <figure>
      <preamble>application/xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;album xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
  &lt;id&gt;44332211&lt;/id&gt;
  &lt;thumbnailUrl&gt;http://pages.example.org/albums/4433221-tn.png&lt;/thumbnailUrl&gt;
  &lt;title&gt;Example Album&lt;/title&gt;
  &lt;description&gt;This is an example album, and this text is an example description&lt;/description&gt;
  &lt;location&gt;
     &lt;latitude&gt;0&lt;/latitude&gt;
     &lt;longitude&gt;0&lt;/longitude&gt;
  &lt;/location&gt;
  &lt;ownerId&gt;example.org:55443322&lt;/ownerId&gt;
&lt;/album&gt;       
</artwork>
     </figure>
     <figure>
      <preamble>application/atom+xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom"&gt;
 &lt;content type="application/xml"&gt;
   &lt;album xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
     &lt;id&gt;44332211&lt;/id&gt;
     &lt;thumbnailUrl&gt;http://pages.example.org/albums/4433221-tn.png&lt;/thumbnailUrl&gt;
     &lt;title&gt;Example Album&lt;/title&gt;
     &lt;description&gt;This is an example album, and this text is an example description&lt;/description&gt;
     &lt;location&gt;
       &lt;latitude&gt;0&lt;/latitude&gt;
       &lt;longitude&gt;0&lt;/longitude&gt;
     &lt;/location&gt;
     &lt;ownerId&gt;example.org:55443322&lt;/ownerId&gt;
   &lt;/album&gt;
 &lt;/content&gt;
 &lt;title/&gt;
 &lt;updated&gt;2003-12-13T18:30:02Z&lt;/updated&gt;
 &lt;author&gt;&lt;url&gt;example.org:55443322&lt;/url&gt;&lt;/author&gt;
 &lt;id&gt;urn:guid:example.org:44332211&lt;/id&gt;
&lt;/entry&gt;    
</artwork>
     </figure></t>
	 
	 <t>
	 For backwards compatibility with the 0.9 REST data format, the "caption" 
	 field should be included in the response for an Album and have the same 
	 value as the "title" field.  Caption is deprecated for 1.0 and will be fully 
	 removed from the data format in a future version of the spec.
	 </t>
     <figure>
      <preamble>application/json representation with caption for backwards-compatibility:</preamble>
      <artwork xml:space="preserve">
{
  "id" : "44332211",
  "thumbnailUrl" : "http://pages.example.org/albums/4433221-tn.png",
  "title" : "Example Album",
  "caption" : "Example Album",
  "description" : "This is an example album, and this text is an example description",
  "location" : { "latitude": 0, "longitude": 0 },
  "ownerId" : "example.org:55443322"
}       
</artwork>
     </figure>
	 
	 
    </section>
    <section title="MediaItem">
      
      
     <t>A minimal media item example: 
     <figure>
      <preamble>application/json representation:</preamble>
      <artwork xml:space="preserve">
{
  "id" : "11223344",
  "thumbnail_url" : "http://pages.example.org/images/11223344-tn.png",
  "mime_type" : "image/png",
  "type" : "image",
  "url" : "http://pages.example.org/images/11223344.png",
  "album_id" : "44332211"
}        
</artwork>
     </figure>
     <figure>
      <preamble>application/xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;MediaItem xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
  &lt;id&gt;11223344&lt;/id&gt;
  &lt;thumbnail_url&gt;http://pages.example.org/images/11223344-tn.png&lt;/thumbnail_url&gt;
  &lt;mimeType&gt;image/png&lt;/mimeType&gt;
  &lt;type&gt;image&lt;/type&gt;
  &lt;url&gt;http://pages.example.org/images/11223344.png&lt;/url&gt;
  &lt;albumId&gt;44332211&lt;/albumId&gt;
&lt;MediaItem&gt;        
</artwork>
     </figure>
     <figure>
      <preamble>application/atom+xml representation:</preamble>
      <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom"&gt;
 &lt;content type="application/xml"&gt;
   &lt;mediaItem xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
     &lt;id&gt;11223344&lt;/id&gt;
     &lt;thumbnail_url&gt;http://pages.example.org/images/11223344-tn.png&lt;/thumbnail_url&gt;
     &lt;mimeType&gt;image/png&lt;/mimeType&gt;
     &lt;type&gt;image&lt;/type&gt;
     &lt;url&gt;http://pages.example.org/images/11223344.png&lt;/url&gt;
     &lt;albumId&gt;44332211&lt;/albumId&gt;
   &lt;mediaItem&gt;
 &lt;/content&gt;
 &lt;title/&gt;
 &lt;updated&gt;2003-12-13T18:30:02Z&lt;/updated&gt;
 &lt;author&gt;&lt;url&gt;example.org:55443322&lt;/url&gt;&lt;/author&gt;
 &lt;id&gt;urn:guid:example.org:11223344&lt;/id&gt;
&lt;/entry&gt;        
</artwork>
     </figure></t>
	 
    </section>
   </section>
   <section title="Message">
     
     <t> [ Needs to be moved to Social-Data.xml ] </t>
     
    <t>A Message example follows. For brevity, details of the 'sender' field,
    an OpenSocial Person, are omitted. </t>
    <figure>
     <preamble>application/json representation</preamble>
     <artwork xml:space="preserve">
{
 "id" : "http://example.org/inbox/message/{msgid}",
  "recipients" : ["example.org:AD38B3886625AAF", "example.org:997638BAA6F25AD"],
 "sender" : "{ "id" : ... }",
 "title" : "You have a new messge from Joe",
 "titleId" : "541141091700",
 "body" : "Short message from Joe to some friend\/s",
 "bodyId" : "5491155811231",  
 "type" : "privateMessage",
 "status" : "unread",
 "data" : "..."
}
</artwork>
    </figure>
    <figure>
     <preamble>application/xml representation</preamble>
     <artwork xml:space="preserve">
&lt;message xmlns="http://ns.opensocial.org/2008/opensocial"&gt;
    &lt;id&gt;http://example.org/inbox/message/{msgid}&lt;/id&gt;
    &lt;recipient&gt;example.org:AD38B3886625AAF&lt;/recipient&gt;
        &lt;recipient&gt;example.org:997638BAA6F25AD&lt;/recipient&gt;
        &lt;sender&gt;
           &lt;person&gt;...&lt;/person&gt;
        &lt;/sender&gt;
        &lt;title&gt;You have a new messge from Joe&lt;/title&gt;
        &lt;titleId&gt;541141091700&lt;/titleId&gt;
        &lt;updated&gt;2008-09-29T23:35:37.266Z&lt;/updated&gt;
        &lt;body&gt;Short message from Joe to some friend\/s&lt;/body&gt;
        &lt;bodyId&gt;5491155811231&lt;/bodyId&gt;
        &lt;type&gt;privateMessage&lt;/type&gt;
        &lt;status&gt;unread&lt;/status&gt;
        &lt;data&gt;...&lt;/data&gt;
&lt;/message&gt;
</artwork>
    </figure>
    <figure>
     <preamble>application/atom+xml representation</preamble>
     <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom" xmlns:osapi="http://opensocial.org/2008/opensocialapi"&gt;
    &lt;osapi:recipient&gt;example.org:AD38B3886625AAF&lt;/osapi:recipient&gt;
    &lt;osapi:recipient&gt;example.org:997638BAA6F25AD&lt;/osapi:recipient&gt;
    &lt;sender&gt;&lt;person&gt;...&lt;/person&gt;&lt;/sender&gt;
    &lt;title&gt;You have a new message from Joe&lt;/title&gt;
    &lt;id&gt;http://example.org/inbox/message/{msgid}&lt;/id&gt;
    &lt;link rel="alternate" href="http://app.example.org/inbox/message/{msgid}"/&gt;
    &lt;content&gt;Short message from Joe to some friend/s&lt;/content&gt;
    &lt;status&gt;UNREAD&lt;/status&gt;
    &lt;data&gt;...&lt;/data&gt;
&lt;/entry&gt;
</artwork>
    </figure>
    <t>The recipient may also include a type identifier. The osapi:recipient
    supports two formats: </t>
    <list style="numbers">
     <t>For people: [container]:[identifier]</t>
     <t>Specifying a group or a person:
     [container]:[group|person]:[identifier]</t>
    </list>
    <figure>
     <artwork xml:space="preserve">
&lt;entry xmlns="http://www.w3.org/2005/Atom"
        xmlns:osapi="http://opensocial.org/2008/opensocialapi"&gt;
 &lt;osapi:recipient&gt;example.org:group:AD38B3886625AAF&lt;/osapi:recipient&gt;
 &lt;osapi:recipient&gt;example.org:person:997638BAA6F25AD&lt;/osapi:recipient&gt;
 &lt;osapi:recipient&gt;example.org:6221226&lt;/osapi:recipient&gt;
 &lt;title&gt;You have an invitation from Joe&lt;/title&gt;
 &lt;id&gt;{msgid}&lt;/id&gt;
 &lt;link rel="alternate" href="http://app.example.org/invites/{msgid}"/&gt;
 &lt;content&gt;Click &lt;a href="http://app.example.org/invites/{msgid}"&gt;here&lt;/a&gt; to review your invitation.&lt;/content&gt;
&lt;/entry&gt;
</artwork>
    </figure>
    <t>The 'sender' field in the message representations is only needed when
    receiving a message with a GET request. It is not required when POSTING a
    new message as this information is represented by the {guid}. Using a
    Person for the sender field allows a gadget to present meaningful
    information about the message sender without requiring a separate request
    for this information.</t>
    <t>The 'data' field is used for information specific to the gadget that is
    sending or displaying the message. It may be omitted in most messages. An
    example is a message from a user asking to join a group. In the received
    message to the group's owner(s), the 'data' field could contain the JSON or
    XML representation of an OpenSocial Group.</t>

    <figure>
     <preamble>Sample JSON for Message</preamble>
     <artwork xml:space="preserve">
{
   "recipients" : ["example.org:AD38B3886625AAF", "example.org:997638BAA6F25AD"],
   "title" : "You have an invitation from Joe",
   "body" : "Some content",
   "type" : "EMAIL"
}
</artwork>
    </figure>
   </section>
   <section title="Content Upload">
    <t> [ Moved to Core-API-Server.xml] </t>
   </section>   
   <section title="Invalidation">
     <t>[ Moved to Core-API-Server.xml ]</t>
   </section>
  </section>
  <section title="Operations">
   <t> [Moved to Core-API-Server.xml ] </t>
  </section>
  <section title="Request Authentication and Authorization Context">
     <t>[ Moved to Core-API-Server.xml ]</t>
  </section>
  <section title="Discovery">
   <t> [Moved to Core-API-Server.xml ] </t>
  </section>
  <section title="The Core OpenSocial Service Types">
    <t> [ Moved to Core-API-Server.xml ] </t>
   <section title="People">
    <t> [ Moved to Social-API-Server.xml ] </t>
   </section>
   <section title="Groups">
    <t> [ Moved to Social-API-Server.xml ] </t>
   </section>
   <section title="Activities">
    <t> [ Moved to Social-API-Server.xml ] </t>
   </section>
   <section title="AppData">
    <t> [ Moved to Social-API-Server.xml ] </t>
   </section>
   <section title="Albums">
    <t> [ Moved to Social-API-Server.xml ] </t>
   </section>
   <section title="MediaItems">
    <t> [ Moved to Social-API-Server.xml ] </t>
   </section>
   <section title="Invalidation">
     [ Moved to Core-API-Server.xml ] 
   </section>
   <section title="Standard Query Parameters" anchor="standardQueryParameters">
    <t> [ Moved to Core-API-Server.xml ] </t>
   </section>
  </section>
  <section title="Security Considerations">
    <t> [ Moved to Core-API-Server.xml ] </t>
  </section>
  <section title="Concurrency Control (Optional)">
    <t> [ Moved to Core-API-Server.xml ] </t>
  </section>
  <section title="Messaging (Optional)">
    <t> [ Moved to Social-API-Server.xml ] </t>
  </section>
  <section title="Field Names">
    <t>[ Moved to Core-Data.xml and Social-Data.xml ]</t>
  </section>
  <section title="XML format XSD"
           anchor="XML_format_XSD">
   <t>[Editor's note: These should be broken up and moved to Social-Data.xml]</t>
   <t>
    <figure>
     <artwork xml:space="preserve">
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xs:schema xmlns:tns="http://ns.opensocial.org/2008/opensocial"
  elementFormDefault="qualified"
  targetNamespace="http://ns.opensocial.org/2008/opensocial"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;xs:simpleType name="EscapeTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="HTML_ESCAPE" /&gt;
      &lt;xs:enumeration value="NONE" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;!--  this is a proposal for the OpenSocial 0.9 XSD. --&gt;
  &lt;xs:element name="person" type="tns:Person" /&gt;
  &lt;xs:element name="group" type="tns:Group" /&gt;
  &lt;xs:element name="activity" type="tns:Activity" /&gt;
  &lt;xs:element name="appData" type="tns:Appdata" /&gt;
  &lt;xs:element name="response" type="tns:Response" /&gt;
  &lt;xs:element name="list.container" type="xs:anyType" /&gt;
  &lt;xs:complexType name="Response"&gt;
    &lt;xs:choice minOccurs="0" maxOccurs="unbounded" &gt;
      &lt;xs:element minOccurs="0" name="itemsPerPage" type="xs:int" /&gt;
      &lt;xs:element minOccurs="0" name="startIndex" type="xs:long" /&gt;
      &lt;xs:element minOccurs="0" name="totalResults" type="xs:long" /&gt;
      &lt;xs:element minOccurs="0" name="isFiltered" type="xs:boolean" /&gt;
      &lt;xs:element minOccurs="0" name="isSorted" type="xs:boolean" /&gt;
      &lt;xs:element minOccurs="0" name="isUpdatedSince" type="xs:boolean" /&gt;
      &lt;xs:element minOccurs="0" name="group" type="tns:Group" /&gt;
      &lt;xs:element minOccurs="0" name="activity" type="tns:Activity" /&gt;
      &lt;xs:element minOccurs="0" name="person" type="tns:Person" /&gt;
      &lt;xs:element minOccurs="0" name="album" type="tns:Album" /&gt;
      &lt;xs:element minOccurs="0" name="mediaItem" type="tns:MediaItem" /&gt;
      &lt;xs:element minOccurs="0" name="message" type="tns:Message" /&gt;
      &lt;xs:element minOccurs="0"  maxOccurs="unbounded" name="entry" type="tns:Entry" /&gt;
      &lt;!--  this is to allow responses to create to validate --&gt;
      &lt;xs:element minOccurs="0" name="map" type="xs:anyType" /&gt;
    &lt;/xs:choice&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Entry" &gt;
    &lt;xs:choice&gt;
      &lt;xs:element minOccurs="0" name="activity" type="tns:Activity" /&gt;
      &lt;xs:element minOccurs="0" name="person" type="tns:Person" /&gt;
      &lt;xs:element minOccurs="0" name="group" type="tns:Group" /&gt;
      &lt;xs:element minOccurs="0" name="appData" type="tns:Appdata" /&gt;
      &lt;xs:element minOccurs="0" name="album" type="tns:Album" /&gt;
      &lt;xs:element minOccurs="0" name="mediaItem" type="tns:MediaItem" /&gt;
    &lt;/xs:choice&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Activity"&gt;
    &lt;xs:choice minOccurs="0" maxOccurs="unbounded"&gt;
      &lt;xs:element minOccurs="0" name="appId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="body" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="bodyId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="externalId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="id" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="mediaItems" type="tns:MediaItem" /&gt;
      &lt;xs:element minOccurs="0" name="postedTime" type="xs:long" /&gt;
      &lt;xs:element minOccurs="0" name="priority" type="xs:double" /&gt;
      &lt;xs:element minOccurs="0" name="streamFaviconUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="streamSourceUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="streamTitle" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="streamUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="templateParams" type="tns:ActivityTemplateParams" /&gt;
      &lt;xs:element minOccurs="0" name="title" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="titleId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="url" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="userId" type="xs:string" /&gt;
    &lt;/xs:choice&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="ActivityTemplateParams"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="PersonKey" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="PersonKey.DisplayName" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="PersonKey.Id" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="PersonKey.ProfileUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="person" type="tns:Person" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Person"&gt;
    &lt;xs:choice minOccurs="1" maxOccurs="unbounded"&gt;
      &lt;xs:element minOccurs="0" name="aboutMe" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="accounts" type="tns:Account"/&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="activities" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="addresses" type="tns:Address" /&gt;
      &lt;xs:element minOccurs="0" name="age" type="xs:string"/&gt;
      &lt;xs:element minOccurs="0" name="anniversary" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" name="appData" type="tns:Appdata" /&gt;
      &lt;xs:element minOccurs="0" name="birthday" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" name="bodyType" type="tns:BodyType" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="books" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="cars" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="children" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="connected" type="tns:Presence" /&gt;
      &lt;xs:element minOccurs="0" name="location" type="tns:Address" /&gt;
      &lt;xs:element minOccurs="0" name="currentLocation" type="tns:Address" /&gt;
      &lt;xs:element minOccurs="0" name="displayName" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="drinker" type="tns:Drinker" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="emails" type="tns:PluralPersonField" /&gt;
      &lt;xs:element minOccurs="0" name="ethnicity" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="fashion" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="food" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="gender" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="happiestWhen" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="hasApp" type="xs:boolean" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="heroes" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="humor" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="id" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="ims" type="tns:PluralPersonField"/&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="interests" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="jobInterests" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="languagesSpoken" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="livingArrangement" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="lookingFor" type="tns:LookingFor" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="movies" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="music" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="name" type="tns:Name" /&gt;
      &lt;xs:element minOccurs="0" name="networkPresence" type="tns:NetworkPresence" /&gt;
      &lt;xs:element minOccurs="0" name="nickname" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="organizations" type="tns:Organization" /&gt;
      &lt;xs:element minOccurs="0" name="pets" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="phoneNumbers" type="tns:PluralPersonField" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="photos" type="tns:PluralPersonField" /&gt;
      &lt;xs:element minOccurs="0" name="politicalViews" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="preferredUsername" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="profileSong" type="tns:Url" /&gt;
      &lt;xs:element minOccurs="0" name="profileUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="profileVideo" type="tns:Url" /&gt;
      &lt;xs:element minOccurs="0" name="published" type="xs:dateTime"/&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="quotes" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="relationships" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="relationshipStatus" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="religion" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="romance" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="scaredOf" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="sexualOrientation" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="smoker" type="tns:Smoker" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="sports" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="status" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="tags" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="thumbnailUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="turnOffs" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="turnOns" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="tvShows" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="updated" type="xs:dateTime"/&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="urls" type="tns:Url" /&gt;
      &lt;xs:element minOccurs="0" name="utcOffset" type="xs:int" /&gt;
    &lt;/xs:choice&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Group"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="id" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="title" type="xs:string" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="AppdataEntry" mixed="true"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="1" name="key" type="xs:string" /&gt;
      &lt;xs:element minOccurs="1" name="value"  type="xs:anyType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Appdata"&gt;
    &lt;xs:sequence&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="entry" type="tns:AppdataEntry" /&gt;
    &lt;/xs:sequence&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="BodyType"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="build" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="eyeColor" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="hairColor" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="height" type="xs:double" /&gt;
      &lt;xs:element minOccurs="0" name="weight" type="xs:double" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Address"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="country" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="extendedAddress" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="latitude" type="xs:double" /&gt;
      &lt;xs:element minOccurs="0" name="locality" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="longitude" type="xs:double" /&gt;
      &lt;xs:element minOccurs="0" name="poBox" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="postalCode" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="primary" type="xs:boolean"/&gt;
      &lt;xs:element minOccurs="0" name="region" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="streetAddress" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="type" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="formatted" type="xs:string" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Account"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="domain" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="primary" type="xs:boolean"/&gt;
      &lt;xs:element minOccurs="0" name="userId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="username" type="xs:string" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Organization"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="address" type="tns:Address" /&gt;
      &lt;xs:element minOccurs="0" name="department" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="description" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="endDate" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" name="name" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="startDate" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" name="type" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="title" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="field" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="subField" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="webpage" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="salary" type="xs:string" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Name"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="additionalName" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="familyName" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="givenName" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="honorificPrefix" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="honorificSuffix" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="formatted" type="xs:string" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Url"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="value" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="linkText" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="type" type="xs:string" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Album"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="id" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="thumbnailUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="title" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="caption" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="description" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="location" type="tns:Address" /&gt;
      &lt;xs:element minOccurs="0" name="ownerId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="mediaType" type="tns:MediaItemType" /&gt;
      &lt;xs:element minOccurs="0" name="mediaMimeType" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="mediaItemCount" type="xs:integer" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  
  &lt;xs:complexType name="MediaItem"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="id" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="title" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="created" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" name="thumbnailUrl" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="description" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="duration" type="xs:integer" /&gt;
      &lt;xs:element minOccurs="0" name="location" type="tns:Address" /&gt;
      &lt;xs:element minOccurs="0" name="language" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="albumId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="fileSize" type="xs:long" /&gt;
      &lt;xs:element minOccurs="0" name="startTime" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" name="rating" type="xs:integer" /&gt;
      &lt;xs:element minOccurs="0" name="numVotes" type="xs:integer" /&gt;
      &lt;xs:element minOccurs="0" name="numComments" type="xs:integer" /&gt;
      &lt;xs:element minOccurs="0" name="numViews" type="xs:integer" /&gt;
      &lt;xs:element minOccurs="0" name="tags" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="taggedPeople" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="mimeType" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="type" type="tns:MediaItemType" /&gt;
      &lt;xs:element minOccurs="0" name="url" type="xs:string" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="MediaItemType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="AUDIO" /&gt;
      &lt;xs:enumeration value="IMAGE" /&gt;
      &lt;xs:enumeration value="VIDEO" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="Drinker"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:DrinkerType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="DrinkerType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="HEAVILY" /&gt;
      &lt;xs:enumeration value="NO" /&gt;
      &lt;xs:enumeration value="OCCASIONALLY" /&gt;
      &lt;xs:enumeration value="QUIT" /&gt;
      &lt;xs:enumeration value="QUITTING" /&gt;
      &lt;xs:enumeration value="REGULARLY" /&gt;
      &lt;xs:enumeration value="SOCIALLY" /&gt;
      &lt;xs:enumeration value="YES" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="Presence"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:PresenceType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="PresenceType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="AWAY" /&gt;
      &lt;xs:enumeration value="CHAT" /&gt;
      &lt;xs:enumeration value="DND" /&gt;
      &lt;xs:enumeration value="OFFLINE" /&gt;
      &lt;xs:enumeration value="ONLINE" /&gt;
      &lt;xs:enumeration value="XA" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="Smoker"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:SmokerType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="SmokerType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="HEAVILY" /&gt;
      &lt;xs:enumeration value="NO" /&gt;
      &lt;xs:enumeration value="OCCASIONALLY" /&gt;
      &lt;xs:enumeration value="QUIT" /&gt;
      &lt;xs:enumeration value="QUITTING" /&gt;
      &lt;xs:enumeration value="REGULARLY" /&gt;
      &lt;xs:enumeration value="SOCIALLY" /&gt;
      &lt;xs:enumeration value="YES" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="CreateActivityPriority"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:CreateActivityPriorityType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="CreateActivityPriorityType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="HIGH" /&gt;
      &lt;xs:enumeration value="LOW" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="EscapeType"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:EscapeTypeType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="Message"&gt;
    &lt;xs:choice&gt;
      &lt;xs:element minOccurs="0" name="body" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="bodyId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="title" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="titleId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="id" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="recipients" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="senderId" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="timeSent" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" name="inReplyTo" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="replies" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="status" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="appUrl" type="tns:Url" /&gt;
      &lt;xs:element minOccurs="0" name="collectionIds" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="updated" type="xs:dateTime" /&gt;
      &lt;xs:element minOccurs="0" maxOccurs="unbounded" name="urls" type="tns:Url" /&gt;
    &lt;/xs:choice&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:complexType name="MessageType"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:MessageTypeType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="MessageTypeType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="EMAIL" /&gt;
      &lt;xs:enumeration value="NOTIFICATION" /&gt;
      &lt;xs:enumeration value="PRIVATE_MESSAGE" /&gt;
      &lt;xs:enumeration value="PUBLIC_MESSAGE" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="Environment"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:EnvironmentType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="EnvironmentType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="ACTIVITY" /&gt;
      &lt;xs:enumeration value="ADDRESS" /&gt;
      &lt;xs:enumeration value="BODY_TYPE" /&gt;
      &lt;xs:enumeration value="EMAIL" /&gt;
      &lt;xs:enumeration value="FILTER_TYPE" /&gt;
      &lt;xs:enumeration value="MEDIAITEM" /&gt;
      &lt;xs:enumeration value="MESSAGE" /&gt;
      &lt;xs:enumeration value="MESSAGE_TYPE" /&gt;
      &lt;xs:enumeration value="NAME" /&gt;
      &lt;xs:enumeration value="ORGANIZATION" /&gt;
      &lt;xs:enumeration value="PERSON" /&gt;
      &lt;xs:enumeration value="PHONE" /&gt;
      &lt;xs:enumeration value="SORTORDER" /&gt;
      &lt;xs:enumeration value="URL" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="LookingFor"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:LookingForType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="LookingForType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="ACTIVITY_PARTNERS" /&gt;
      &lt;xs:enumeration value="DATING" /&gt;
      &lt;xs:enumeration value="FRIENDS" /&gt;
      &lt;xs:enumeration value="NETWORKING" /&gt;
      &lt;xs:enumeration value="RANDOM" /&gt;
      &lt;xs:enumeration value="RELATIONSHIP" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="NetworkPresence"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="displayValue" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="value" type="tns:NetworkPresenceType" /&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
  &lt;xs:simpleType name="NetworkPresenceType"&gt;
    &lt;xs:restriction base="xs:string"&gt;
      &lt;xs:enumeration value="AWAY" /&gt;
      &lt;xs:enumeration value="CHAT" /&gt;
      &lt;xs:enumeration value="DND" /&gt;
      &lt;xs:enumeration value="OFFLINE" /&gt;
      &lt;xs:enumeration value="ONLINE" /&gt;
      &lt;xs:enumeration value="XA" /&gt;
    &lt;/xs:restriction&gt;
  &lt;/xs:simpleType&gt;
  &lt;xs:complexType name="PluralPersonField"&gt;
    &lt;xs:all&gt;
      &lt;xs:element minOccurs="0" name="value" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="type" type="xs:string" /&gt;
      &lt;xs:element minOccurs="0" name="primary" type="xs:boolean"/&gt;
    &lt;/xs:all&gt;
  &lt;/xs:complexType&gt;
&lt;/xs:schema&gt;
</artwork>
    </figure>
   </t>
  </section>
  <section title="HTTP Status Codes">
    <t>[ Moved to <eref target="./Core-API-Server.xml#HTTP-Status-Codes">Core-API-Server.xml</eref> ]</t>
  </section>
  <section title="Compatibility with Portable Contacts">
    <t>[ Moved to <eref target="./Social-API-Server.xml">Social-API-Server.xml</eref> ]</t>
  </section>
 </middle>
 <back>
  <references>
   <reference anchor='RFC2119'>
    <front>
     <title>Key words for use in RFCs to Indicate Requirement Levels</title>
     <author initials='S.'
             surname='Bradner'
             fullname='Scott Bradner'>
      <organization abbrev='HarvardU'>Harvard University</organization>
     </author>
     <date month='March'
           year='1997' />
    </front>
    <seriesInfo name='RFC'
                value='2119' />
   </reference>
   <reference anchor='RFC2606'>
    <front>
     <title>Reserved Top Level DNS Names</title>
     <author initials='D.'
             surname='Eastlake'
             fullname='Donald E. Eastlake 3rd'>
      <organization abbrev='IBM'>IBM</organization>
     </author>
     <author initials='A.'
             surname='Panitz'
             fullname='Aliza R. Panitz'></author>
     <date month='June'
           year='1999' />
    </front>
    <seriesInfo name='RFC'
                value='2606' />
   </reference>
   <reference anchor='RFC3339'>
    <front>
     <title>Reserved Top Level DNS Names</title>
     <author initials='G.'
             surname='Klyne'
             fullname='Graham Klyne'>
      <organization>Clearswift Corporation</organization>
     </author>
     <author initials='C.'
             surname='Newman'
             fullname='Chris Newman'>
      <organization>Sun Microsystems</organization>
     </author>
     <date month='July'
           year='2002' />
    </front>
    <seriesInfo name='RFC'
                value='3339' />
   </reference>
   <reference anchor='RFC4287'>
    <front>
     <title>The Atom Syndication Format</title>
     <author initials='M.'
             surname='Nottingham'
             fullname='Mark Nottingham'></author>
     <author initials='R.'
             surname='Sayre'
             fullname='Robert Sayre'></author>
     <date month='December'
           year='2005' />
    </front>
    <seriesInfo name='RFC'
                value='4287' />
   </reference>
   <reference anchor='RFC4627'>
    <front>
     <title>The application/json Media Type for JavaScript Object Notation
     (JSON)</title>
     <author initials='D.'
             surname='Crockford'
             fullname='Douglas Crockford'>
      <organization>JSON.org</organization>
     </author>
     <date month='July'
           year='2006' />
    </front>
    <seriesInfo name='RFC'
                value='4627' />
   </reference>
   <reference anchor='RFC5023'>
    <front>
     <title>The Atom Publishing Protocol</title>
     <author initials='J.'
             surname='Gregorio'
             fullname='Joe Gregorio'>
      <organization abbrev='GOOG'>Google</organization>
     </author>
     <author initials='B.'
             surname='de hOra'
             fullname='Bill de hOra'>
      <organization>NewBay Software</organization>
     </author>
     <date month='October'
           year='2007' />
    </front>
    <seriesInfo name='RFC'
                value='5023' />
   </reference>
   <reference anchor='XML1_0'
              target='http://www.w3.org/TR/xml/'>
    <front>
     <title>Extensible Markup Language (XML) 1.0 (Fifth Edition)</title>
     <author initials='T.'
             surname='Bray'
             fullname='Tim Bray'>
      <organization>Textuality</organization>
      <organization>Netscape</organization>
     </author>
     <author initials='J.'
             surname='Paoli'
             fullname='Jean Paoli'>
      <organization abbrev='MSFT'>Microsoft</organization>
     </author>
     <author initials='C. M.'
             surname='Sperberg-McQueen'
             fullname='C. M. Sperberg-McQueen'>
      <organization abbrev='W3C'>W3C</organization>
     </author>
     <author initials='E.'
             surname='Maler'
             fullname='Eve Maler'>
      <organization abbrev='Sun'>Sun Microsystems, Inc.</organization>
     </author>
     <author initials='F.'
             surname='Yergeau'></author>
     <date month='November'
           year='2008' />
    </front>
   </reference>
   <reference anchor="xs-dateTime"
              target="http://www.w3.org/TR/xmlschema-2/#dateTime">
    <front>
     <title>XML Schema Part 2: Datatypes Second Edition</title>
     <author initials='P.V.'
             surname='Biron'
             fullname='Paul V. Biron'>
      <organization>Kaiser Permanente, for Health Level Seven</organization>
     </author>
     <author initials='A.'
             surname='Malhotra'
             fullname='Ashok Malhotra'>
      <organization>Microsoft</organization>
     </author>
     <date month='October'
           year='2004' />
    </front>
   </reference>
   <reference anchor='OpenSearch'
              target='http://www.opensearch.org/Specifications/OpenSearch/1.1/Draft_3'>
              
    <front>
     <title>OpenSearch 1.1, Draft 3</title>
     <author initials='D.'
             surname='Clinton'
             fullname='DeWitt Clinton'>
      <organization>OpenSearch.org</organization>
     </author>
     <date month='November'
           year='2008' />
    </front>
   </reference>
   <reference anchor='Social-Graph-Node-Mapper'
              target='http://code.google.com/p/google-sgnodemapper/'>
    <front>
     <title>Social Graph Node Mapper</title>
    </front>
   </reference>
   <reference anchor="OAuth-Consumer-Request-1.0-Draft-1"
              target="http://oauth.googlecode.com/svn/spec/ext/consumer_request/1.0/drafts/1/spec.html">
    <front>
     <title>OAuth Consumer Request 1.0 Draft 1</title>
     <author initials='E.'
             surname='Hammer-Lahav'
             fullname='Eran Hammer-Lahav'></author>
    </front>
   </reference>
   <reference anchor='OAuth-Core-1.0'
              target='http://oauth.net/core/1.0/'>
    <front>
     <title>OAuth Core 1.0</title>
     <author initials='M.'
             surname='Atwood'
             fullname='Mark Atwood'></author>
     <author initials='R. M.'
             surname='Conlan'
             fullname='Richard M. Conlan'>
      <organization>Google</organization>
     </author>
     <author initials='B.'
             surname='Cook'
             fullname='Blaine Cook'>
      <organization>Twitter</organization>
     </author>
     <author initials='L.'
             surname='Culver'
             fullname='Leah Culver'>
      <organization>Pownce</organization>
     </author>
     <author initials='K.'
             surname='Elliott-McCrea'
             fullname='Kellan Elliott-McCrea'>
      <organization>Flickr</organization>
     </author>
     <author initials='L.'
             surname='Halff'
             fullname='Larry Halff'>
      <organization>ma.gnolia</organization>
     </author>
     <author initials='E.'
             surname='Hammer-Lahav'
             fullname='Eran Hammer-Lahav'></author>
     <author initials='B.'
             surname='Laurie'
             fullname='Ben Laurie'>
      <organization>Google</organization>
     </author>
     <author initials='C.'
             surname='Messina'
             fullname='Chris Messina'></author>
     <author initials='J.'
             surname='Panzer'
             fullname='John Panzer'></author>
     <author initials='S.'
             surname='Quigley'
             fullname='Sam Quigley'>
      <organization>Twitter</organization>
     </author>
     <author initials='D.'
             surname='Recordon'
             fullname='David Recordon'>
      <organization>six apart</organization>
     </author>
     <author initials='E.'
             surname='Sandler'
             fullname='Eran Sandler'>
      <organization>Yedda</organization>
     </author>
     <author initials='J.'
             surname='Sergent'
             fullname='Jonathan Sergent'>
      <organization>ma.gnolia</organization>
     </author>
     <author initials='B.'
             surname='Slesinsky'
             fullname='Brian Slesinsky'></author>
     <author initials='A.'
             surname='Smith'
             fullname='Andy Smith'>
      <organization>Jaiku</organization>
     </author>
     <date month='December'
           year='2007' />
    </front>
   </reference>
  </references>
 </back>
</rfc>
